#summary Maven Command Reference

<wiki:toc />

= Introduction =

The document is Maven commands reference. It is organized as sections, each section for one build aspect. Commands listed below cover 90% typical use-cases. Few commands are supported only by Maven 3.

= Project Build =

Clean a project:

{{{
mvn clean
}}}

Compile a project:

{{{
mvn compile
}}}

Run unit tests (it also compiles a project):

{{{
mvn test
}}}

Build a package (it also executes unit tests):

{{{
mvn package
}}}

Goal `integration-test` should not be used to run integration tests. Use `verify` goal instead. Run integration test (it also builds a package):

{{{
mvn verify
}}}

Install a package into local repository (it also executes integration tests):

{{{
mvn install
}}}

Install a package into local repository without integration test:

{{{
mvn -DskipITs=true install
}}}

Install a package into local repository without unit and integration test:

{{{
mvn -DskipTests=true install
}}}


Goal `deploy` should not be called directly. Configure build plan on continuous integration server to deploy artifact into corporate enterprise repository.

= Project Run =

Run web application:

{{{
mvn jetty:run
}}}

= Project Site Generation =

*Notice:*

  For modular Maven projects all modules must be installed in the local repository before site generation. [http://jira.codehaus.org/browse/MJAVADOC-116 Bug] in the Maven Javadoc Plugin is a root cause of this restriction.

Generate site without tests reports (tests are not executed):

{{{
mvn site:site
}}}

Generate site with unit tests reports:

{{{
mvn test site:site
}}}

Generate site with unit and integration tests reports:

{{{
mvn verify site:site
}}}

Generate site stage with valid links between project modules:

{{{
mvn test site:stage
}}}

or 

{{{
mvn verify site:stage
}}}

= Code Coverage Reporting =

Generate clover reports for unit tests:

{{{
mvn -Dmaven.clover.licenseLocation='c:\_data\clover.licence' clover2:setup test clover2:aggregate clover2:clover
}}}

Generate clover reports for unit and integration tests:

{{{
mvn -Dmaven.clover.licenseLocation='c:\_data\clover.licence' clover2:setup verify clover2:aggregate clover2:clover
}}}

Property `maven.clover.licenseLocation` can be specified in the `settings.xml` file. Please refer to the Clover [http://confluence.atlassian.com/display/CLOVER/Clover-for-Maven+2+User's+Guide documentation].

= Dependency Management =

Check dependencies for newer versions:

{{{
mvn versions:display-dependency-updates
}}}

Check plugins for newer versions:

{{{
mvn versions:display-plugin-updates
}}}

Check for newer versions defined as properties:

{{{
mvn versions:display-property-updates
}}}

Display project dependencies:

{{{
mvn dependency:tree
}}}

Analyze project dependencies:

{{{
mvn dependency:analyze
}}}

= Getting Help =

Display effective Maven settings:

{{{
mvn help:effective-settings
}}}

Display effective POM:

{{{
mvn help:effective-pom
}}}

Display all profiles (from `settings.xml` and POMs hierarchy):

{{{
mvn help:active-profiles
}}}

Display plugin goals (for `m-compiler-p` in the example below):

{{{
mvn compiler:help
}}}

Display plugin's goal description (for goal `compile` in `m-compiler-p` in the example below):

{{{
mvn compiler:help -Dgoal=compile -Ddetail
}}}