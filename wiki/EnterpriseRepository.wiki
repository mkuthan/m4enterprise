#summary Enterprise Repository

= Introduction =

Enterprise Repository plays one of the most important role in corporate Maven infrastructure. It acts as:

 * Highly configurable proxy for public repositories
 * Place where corporate artifacts are deployed
 * Place where 3rd party artifacts (not available in any public repository) are deployed

= Repository Managers =

 * Artifactory [http://www.jfrog.org/]
 * Nexus [http://nexus.sonatype.org/]
 * Archiva [http://archiva.apache.org/]

The most comprehensive repository manager [http://docs.codehaus.org/display/MAVENUSER/Maven+Repository+Manager+Feature+Matrix feature matrix] is managed by codehaus.

= Maven Configuration =

Regardless of selected repository product Maven configuration is similar. The main goal of the configuration is to force Maven to use only corporate repository.

For complete Maven settings reference please look at: [http://maven.apache.org/settings.html]

== Repository Profile ==

Generally two profiles should be created, for releases and for snapshots. It is important to configure Maven to use only corporate repository. If new repositories are needed, configure them on corporate repository level (as a proxy) not in the Maven settings.

{{{
<profile>
  <id>acme-release-repository</id>
  <repositories>
    <repository>
      <id>acme-release</id>
      <url>http://repository.intranet.acme.com/release-repository/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>acme-release-plugins</id>
      <url>http://repository.intranet.acme.com/release-plugins-repository/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
</profile>
}}}

{{{
<profile>
  <id>acme-snapshot-repository</id>
  <repositories>
    <repository>
      <id>acme-snapshot</id>
      <url>http://repository.intranet.acme.com/snapshot-repository/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>acme-snapshot-plugins</id>
      <url>http://repository.intranet.acme.com/snapshot-plugins-repository/</url>
      <releases>
        <enabled>false</enabled>
      </releases>      
    </pluginRepository>
  </pluginRepositories>
</profile>
}}}

The profile(s) must be enabled for all builds by default:

{{{
<activeProfiles>
  <activeProfile>acme-release-repository</activeProfile>
  <activeProfile>acme-snapshot-repository</activeProfile>
</activeProfiles>
}}}

If the corporate policy is defined to avoid snapshots, only profile for release repository should be activated. Than developer will have to activate the snapshot repository profile explicitly.

== Mirror Configuration  ==

To force Maven to use only corporate repository, `mirror` section must be defined:

{{{
<mirror>
  <id>acme-repository</id>
  <url>http://repository.intranet.acme.com/empty/</url>
  <mirrorOf>external:*,!acme-release,!acme-release-plugins,!acme-snapshot,!acme-snapshot-plugins</mirrorOf>
</mirror>
}}}

This tricky configuration assumes that under `http://repository.intranet.acme.com/empty/` fake repository is configured. It always returns 404 for any request.

All requests to any external repository not listed explicitly in the `mirrorOf` element, will be redirected to the empty repository. It effectively disables distribution management section in any public POM (including root POM embedded in Maven distribution).