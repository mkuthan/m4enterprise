<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.googlecode.m4enterprise</groupId>
		<artifactId>modular-war-parent</artifactId>
		<version>0.0.18-SNAPSHOT</version>
		<relativePath>../modular-war-parent</relativePath>
	</parent>

	<artifactId>modular-war-deploy</artifactId>
	<packaging>war</packaging>
	<name>modular-war-deploy</name>
	<description>Web Application Deploy Module</description>

	<url>${acme-corporate-pom.siteUrl}/${project.parent.artifactId}/${project.artifactId}/</url>

	<!-- Developers that have contributed to the module -->
	<developers>
		<developer>
			<email>developer1@acme.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:svn:http://m4enterprise.googlecode.com/svn/trunk/modular-war/modular-war-deploy/</connection>
		<developerConnection>scm:svn:https://m4enterprise.googlecode.com/svn/trunk/modular-war/modular-war-deploy/</developerConnection>
		<url>http://code.google.com/p/m4enterprise/source/browse/trunk/modular-war/modular-war-deploy/</url>
	</scm>

	<properties>
		<!-- Overlay has no web.xml file (m-war-c) -->
		<failOnMissingWebXml>false</failOnMissingWebXml>

		<modular-war-deploy.deployableId>modular-war-webapp</modular-war-deploy.deployableId>
		<modular-war-deploy.warFile>${project.build.directory}/${modular-war-deploy.deployableId}.war</modular-war-deploy.warFile>

		<modular-war-deploy.configDir>${project.build.directory}/config-resources</modular-war-deploy.configDir>

		<modular-war-deploy.smokeTestUrl>http://${modular-war-deploy.sshHost}:8080/${modular-war-deploy.deployableId}/</modular-war-deploy.smokeTestUrl>
		<modular-war-deploy.smokeTestTitle>Hello World</modular-war-deploy.smokeTestTitle>

		<modular-war-deploy.sshHost>localhost</modular-war-deploy.sshHost>
		<modular-war-deploy.sshDir>/opt/jboss-eap-4.3.0.GA_CP06/jboss-as/server/default/deploy</modular-war-deploy.sshDir>
		<modular-war-deploy.sshUrl>${modular-war-deploy.sshUsername}:${modular-war-deploy.sshPassword}@${modular-war-deploy.sshHost}:${modular-war-deploy.sshDir}</modular-war-deploy.sshUrl>
		<modular-war-deploy.sshStopCommand>/etc/init.d/jboss stop</modular-war-deploy.sshStopCommand>
		<modular-war-deploy.sshStartCommand>/etc/init.d/jboss start</modular-war-deploy.sshStartCommand>
		<modular-war-deploy.sshUsername />
		<modular-war-deploy.sshPassword />

		<modular-war-deploy.wagonServerId>modular-war</modular-war-deploy.wagonServerId>
		<modular-war-deploy.wagonUrl>file:///${env.HOME}/.m4enterprise/dropfolder</modular-war-deploy.wagonUrl>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>

	<profiles>
		<profile>
			<id>deploy</id>

			<activation>
				<property>
					<name>environment</name>
				</property>
			</activation>

			<build>
				<finalName>${modular-war-deploy.deployableId}</finalName>

				<filters>
					<filter>src/main/filters/default.properties</filter>
					<filter>src/main/filters/${environment}.properties</filter>
				</filters>

				<plugins>
					<!-- Filter Application Server descriptors -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${modular-war-deploy.configDir}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/config</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Customize artifact before deployment -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<overlays>
								<overlay>
									<groupId>${project.groupId}</groupId>
									<artifactId>modular-war-webapp</artifactId>
								</overlay>
							</overlays>
						</configuration>
					</plugin>

					<!-- Execute smoke tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>

				<pluginManagement>
					<plugins>
						<!-- SSH deployer -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<executions>
								<execution>
									<id>deploy-all</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<echo message="Stopping server" />
											<sshexec host="${modular-war-deploy.sshHost}" username="${modular-war-deploy.sshUsername}" password="${modular-war-deploy.sshPassword}" command="${modular-war-deploy.sshStopCommand}" trust="true" failonerror="false" />

											<echo message="Uploading WAR file" />
											<scp toDir="${modular-war-deploy.sshUrl}" trust="true">
												<fileset file="${modular-war-deploy.warFile}" />
											</scp>

											<echo message="Uploading descriptors" />
											<scp toDir="${modular-war-deploy.sshUrl}" trust="true">
												<fileset dir="${modular-war-deploy.configDir}" />
											</scp>

											<echo message="Starting server" />
											<sshexec host="${modular-war-deploy.sshHost}" username="${modular-war-deploy.sshUsername}" password="${modular-war-deploy.sshPassword}" command="${modular-war-deploy.sshStartCommand}" trust="true" failonerror="false" />

											<echo message="Waiting for server ..." />
											<waitfor maxwait="240" maxwaitunit="second" checkevery="5" checkeveryunit="second" timeoutproperty="modular-war-deploy">
												<http url="${modular-war-deploy.smokeTestUrl}" />
											</waitfor>

											<fail if="modular-war-deploy" message="Could not start server" />

											<echo message="Server started" />
										</target>
									</configuration>
								</execution>
							</executions>
							<dependencies>
								<dependency>
									<groupId>org.apache.ant</groupId>
									<artifactId>ant-jsch</artifactId>
									<version>1.8.2</version>
								</dependency>
								<dependency>
									<groupId>com.jcraft</groupId>
									<artifactId>jsch</artifactId>
									<version>0.1.44-1</version>
								</dependency>
							</dependencies>
						</plugin>

						<!-- Wagon deployer -->
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>wagon-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>deploy-war</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>upload-single</goal>
									</goals>
									<configuration>
										<serverId>${modular-war-deploy.wagonServerId}</serverId>
										<url>${modular-war-deploy.wagonUrl}/env-${environment}</url>
										<fromFile>${modular-war-deploy.warFile}</fromFile>
									</configuration>
								</execution>
								<execution>
									<id>deploy-descriptors</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>upload</goal>
									</goals>
									<configuration>
										<serverId>${modular-war-deploy.wagonServerId}</serverId>
										<url>${modular-war-deploy.wagonUrl}/env-${environment}</url>
										<fromDir>${modular-war-deploy.configDir}/env-${environment}</fromDir>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

		<profile>
			<id>env-dev</id>

			<activation>
				<property>
					<name>environment</name>
					<value>dev</value>
				</property>
			</activation>

			<build>
				<plugins>
					<!-- Use SSH deployer -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>env-qa</id>

			<activation>
				<property>
					<name>environment</name>
					<value>qa</value>
				</property>
			</activation>

			<properties>
				<!-- QA deployment is not fully automated -->
				<maven.test.skip>true</maven.test.skip>
			</properties>

			<build>
				<plugins>
					<!-- Use Wagon deployer -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>env-prod</id>

			<activation>
				<property>
					<name>environment</name>
					<value>prod</value>
				</property>
			</activation>

			<properties>
				<!-- PROD deployment is not fully automated -->
				<maven.test.skip>true</maven.test.skip>
			</properties>

			<build>
				<plugins>
					<!-- Use Wagon deployer -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>${modular-war-deploy.deployableId}</artifactId>
			<version>${project.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.8</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
